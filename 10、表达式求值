#include<iostream>
#include<stack>
#include<cstring>
#include<string>
using namespace std;
string s;
stack<int> ns;
stack<int> os;
int idx;
int map[7][7]={
1,0,0,0,0,0,0,
1,0,0,0,0,1,1,
1,0,0,0,0,1,1,
1,1,1,0,0,1,1,
1,1,1,0,0,1,1,
1,1,1,1,1,1,1,
1,0,0,0,0,0,0
};
void getnext(int &flag,int &num,int &op)
{
	flag=0;
	num=0;
	int temp=0;
	int c=1;
	if(idx==0)
	{
		os.push(0);
	} 
	if('0'<=s[idx]&&s[idx]<='9')
	{
		flag=0;
		int last=0;
		for(int i=idx;i<s.length();i++)
		{
			if('0'<=s[i]&&s[i]<='9')
			{
				last++;
	
			}else
			{
				break;
			}
		}
		for(int i=idx+last-1;i>=idx;i--)
		{
			if('0'<=s[i]&&s[i]<='9')
			{
				num+=c*(s[i]-'0');
				c*=10;
			}else
			{
				break;
			}
		}
		idx+=last;		
	}
	else
	{
		if(s[idx]=='+')
		{
			flag=1;
			num=0;
			op=1;
		}
		if(s[idx]=='-')
		{
			flag=1;
			num=-1;
			op=2;
		}
		if(s[idx]=='*')
		{
			flag=1;
			op=3;
		}
		if(s[idx]=='/')
		{
			flag=1;
			op=4;
		}
		if(s[idx]=='(')
		{
			flag=1;
			op=5;
		}
		if(s[idx]==')')
		{
			flag=1;
			op=6;
		}
		if(s[idx]=='#')
		{
			
				flag=1;
				op=0;
				return;
		}
		idx++;
	}
}
int main()
{
	while(cin>>s)
	{
		idx=0;
		while(!ns.empty())
		{
			ns.pop();
		}
		while(!os.empty())
		{
			os.pop();
		}
		int f,n,o;
		while(idx<=s.length())
		{
			getnext(f,n,o);
			if(f==0)
			{		
				ns.push(n);	
			}
			else
			{
				if(!os.empty())
				{
					if(map[o][os.top()]==1)
					{
						os.push(o);
					}
					else
					{
						while(map[o][os.top()]==0)
						{
							int top=os.top();
							if(top==5)
							{
									os.pop();
								break;
							}
							os.pop();
							int n1=ns.top();
							ns.pop();
							int n2=ns.top();
							ns.pop();
							if(top==1)
							{
								ns.push(n1+n2);	
							}
							if(top==2)
							{
								ns.push(n2-n1);
							}
							if(top==3)
							{
								ns.push(n1*n2);
							}
							if(top==4)
							{
								ns.push(n2/n1);
							}
						}
						if(o!=6)
						os.push(o);
						if(os.top()==0&&os.size()==2&&ns.size()==1)
						{
							break; 
						} 
					}
				}
 
			}
		}
		printf("%d\n",ns.top());
	}
}
