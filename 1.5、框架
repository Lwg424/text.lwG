// 分治算法的框架

Divide-and-Conquer(int n)  // n为问题规模
{
    if(n < n0) {    // n0为子问题的问题规模
       解决子问题：
         return （子问题的解）;
    }
    for(i = 1;i < k; i++) {     // 分解为较小的子问题p1,p2,p3,....pi
    yi = Divide-and-Conquer(|pi|);   // 递归解决子问题
    T = merge(y1,y2,y3.......);   // 合并子问题
    }
    return  (T);
}

// 贪心算法
Greed(C)  // C是问题的输入集合即候选问题集合
{
   S = {};  // 初始解集合为空
   while(not solution(s)) {   // 集合S没有构成问题的一个解
      x = select(C);     // 在候选集合C中做贪心选择
      if feasible(S,X)   // 判断集合S中加入x后的解是否可行
         S = S + {x};
         C = C - {x};
   }
}
